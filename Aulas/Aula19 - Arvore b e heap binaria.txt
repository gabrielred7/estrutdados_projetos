Arvore B

|..... d e 2d .....|

Uma arvore B de ordem d é uma arvore na qual cada nó diferente da raiz tem entre d e 2d chaves. A raiz tem entre 1 e 2d chaves. Em uma arvore B todas as folhas estao no ultimo nivel, e se um no tem k chaves -> tem k+1 filhos (que so podem ser nulos nos filhos!)

as chaves de cada nó sao ordenadas
c1 <= c2 <= c3 <= ... <= cn
e os filhos sao tais que:
todas as chaves em f0 sao <= c1
chaves em fk sao >= ck
chaves fi (i != 0 e k) sao >= ck e <= ck+1

arvore 1-3 definicao alternativa entao d e d/2

irseçao em area b - toda insercao ocorre em folhas

d=2 nos c/ 2 a 4 chaves

|3|15|25|33|54
-> Cisao

        |25|...|
        |   |
|3|15|...| |33|54|...|



Insere: O(h*log(d) + d*h)

Remocao: O(h*log2(d) + d*h)

Menor arvore B de ordem d c/ altura h

nivel | #de nos | #de chaves
1       1           1
2       2           2d
3       2(d+1)      2(d+1)d
4       2(d+1)^2    2(d+1)^2*d
5       2(d+1)^3    2(d+1)^3*d

nivel de h
2(d+1)^h-2 nos
2(d+1)^h-2 . d chaves

alt h   
n >= 2(d+1)^h-2 * d > 2*d^h-1 
d^(h-1) < n/2
h-1 < logd(n/2)
h <= 1+log2(n/2)

busca: O(log2(d) * logd(n/2)) = O(log2(n/2)

insercao e remocao: O(d*logd(n/2) + log2(m)) 

log2(a)/log2(d) = log2(a)

log2(a) = logd(a) * log2(d)
d = 1024 1 TB chaves


HEAP
Heap do sistema e uma area da memoria que realiza alocação dinamica

HEAP - Lista de Prioridades

Tres Operações
- insere
- remove min
- acha min

Heap binaria é uma arvore binaria completa, tal que os nós do ultimo nivel estao o mais a esquerda possivel, e todos os nos obedecem a propriedade heap (de minimo).

Propriedade heap(de min): Se um é pai de v, entao prior(u) <= prior(v)

      3
   /     \
  7       14
 /  \    /  \
10  20  30  25

Pai(i) [(i-1)/2]
Fesq(i) 2xi+1
Fdir(i) 2xi+2

|3|5|14|7|20|30|25|17|10|13| | |                
 0